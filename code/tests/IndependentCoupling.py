import unittest
import numpy as np
import sinkhorn.utils as utils


class TestIndependentCoupling(unittest.TestCase):
    def test_2x2_matrices(self):
        Px = utils.Matrix2D(m=np.array([[0.52312274, 0.47687726], [0.00991989, 0.99008011]]), cols=2, rows=2)
        Py = utils.Matrix2D(m=np.array([[0.13486813, 0.86513187], [0.7406227, 0.2593773]]), cols=2, rows=2)
        pi = np.array([[0.07055259, 0.45257016, 0.06431554, 0.41256171],
                       [0.38743658, 0.13568616, 0.35318612, 0.12369113],
                       [0.00133788, 0.00858202, 0.13353025, 0.85654985],
                       [0.0073469, 0.002573, 0.7332758, 0.2568043]])

        pi_0 = utils.get_independent_coupling(Px, Py)
        self.assertAlmostEqual(sum(sum(pi-pi_0.m)), 0.0, delta=1.0e-06)

    def test_3x3_4x4_matrices(self):
        Px = utils.Matrix2D(m=np.array([[0.76374157, 0.19119039, 0.04506804],
                               [0.09964732, 0.35538223, 0.54497045],
                               [0.36099043, 0.28824828, 0.35076128]]), cols=3, rows=3)
        Py = utils.Matrix2D(m=np.array([[0.15260117, 0.36522918, 0.31367035, 0.1684993],
                               [0.22484882, 0.25943986, 0.3591205, 0.15659082],
                               [0.2709554, 0.23180896, 0.25116935, 0.24606629],
                               [0.36671985, 0.23586532, 0.33398362, 0.06343121]]), cols=4, rows=4)
        pi = utils.Matrix2D(m=np.array([[0.11654786, 0.2789407, 0.23956309, 0.12868992, 0.02917588, 0.06982831, 0.05997076,
                                   0.03221545, 0.00687744, 0.01646016, 0.01413651, 0.00759393],
                                 [0.17172639, 0.198145, 0.27427525, 0.11959492, 0.04298893, 0.04960241, 0.06866039,
                                  0.02993866, 0.0101335, 0.01169245, 0.01618486, 0.00705724],
                                 [0.2069399, 0.17704214, 0.19182847, 0.18793106, 0.05180407, 0.04431965, 0.04802117,
                                  0.04704551, 0.01221143, 0.01044718, 0.01131971, 0.01108973],
                                 [0.2800792, 0.18014015, 0.25507717, 0.04844505, 0.07011331, 0.04509518, 0.06385446,
                                  0.01212744, 0.01652735, 0.01062999, 0.01505199, 0.00285872],
                                 [0.0152063, 0.03639411, 0.03125641, 0.0167905, 0.05423174, 0.12979596, 0.11147287,
                                  0.05988166, 0.08316313, 0.19903911, 0.17094107, 0.09182714],
                                 [0.02240558, 0.02585249, 0.03578539, 0.01560386, 0.07990727, 0.09220032, 0.12762504,
                                  0.0556496, 0.12253596, 0.14138706, 0.19571006, 0.08533737],
                                 [0.02699998, 0.02309914, 0.02502835, 0.02451985, 0.09629273, 0.08238079, 0.08926112,
                                  0.08744759, 0.14766268, 0.12632903, 0.13687988, 0.13409886],
                                 [0.03654265, 0.02350335, 0.03328057, 0.00632075, 0.13032572, 0.08382234, 0.11869184,
                                  0.02254232, 0.19985148, 0.12853963, 0.1820112, 0.03456814],
                                 [0.05508756, 0.13184424, 0.113232, 0.06082663, 0.04398703, 0.10527668, 0.09041494,
                                  0.04856963, 0.05352658, 0.12810826, 0.11002342, 0.05910303],
                                 [0.08116827, 0.09365531, 0.12963906, 0.05652779, 0.06481229, 0.07478309, 0.10351587,
                                  0.04513704, 0.07886826, 0.09100146, 0.12596557, 0.054926],
                                 [0.09781231, 0.08368082, 0.09066973, 0.08882758, 0.07810243, 0.06681853, 0.07239913,
                                  0.07092819, 0.09504066, 0.08130961, 0.08810048, 0.08631053],
                                 [0.13238236, 0.08514512, 0.12056489, 0.02289806, 0.10570637, 0.06798777, 0.0962702,
                                  0.01828394, 0.12863113, 0.08273242, 0.11714852, 0.02224921]]), cols=12, rows=12)

        pi_0 = utils.get_independent_coupling(Px, Py)
        self.assertAlmostEqual(sum(sum(pi.m-pi_0.m)), 0.0, delta=1.0e-06)


if __name__ == '__main__':
    unittest.main()
